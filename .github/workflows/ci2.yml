name: CI
"on":
  - push
jobs:
    aws-acm-cert:
        name: aws-acm-cert
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-aurora:
        name: aws-aurora
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-aurora-mysql:
        name: aws-aurora-mysql
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-aurora-postgres:
        name: aws-aurora-postgres
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-cloudwatch-log-group:
        name: aws-cloudwatch-log-group
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-default-vpc-security:
        name: aws-default-vpc-security
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-ecs-job:
        name: aws-ecs-job
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-ecs-job-fargate:
        name: aws-ecs-job-fargate
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-ecs-service:
        name: aws-ecs-service
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-ecs-service-fargate:
        name: aws-ecs-service-fargate
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-efs-volume:
        name: aws-efs-volume
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-ecs-task-role:
        name: aws-iam-ecs-task-role
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-group-assume-role:
        name: aws-iam-group-assume-role
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-group-console-login:
        name: aws-iam-group-console-login
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-instance-profile:
        name: aws-iam-instance-profile
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-password-policy:
        name: aws-iam-password-policy
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-policy-cwlogs:
        name: aws-iam-policy-cwlogs
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-role-bless:
        name: aws-iam-role-bless
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-role-cloudfront-poweruser:
        name: aws-iam-role-cloudfront-poweruser
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-role-crossacct:
        name: aws-iam-role-crossacct
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-role-ec2-poweruser:
        name: aws-iam-role-ec2-poweruser
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-role-ecs-poweruser:
        name: aws-iam-role-ecs-poweruser
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-role-infraci:
        name: aws-iam-role-infraci
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-role-poweruser:
        name: aws-iam-role-poweruser
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-role-readonly:
        name: aws-iam-role-readonly
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-role-route53domains-poweruser:
        name: aws-iam-role-route53domains-poweruser
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-iam-role-security-audit:
        name: aws-iam-role-security-audit
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-param:
        name: aws-param
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-params-reader-policy:
        name: aws-params-reader-policy
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-params-secrets-setup:
        name: aws-params-secrets-setup
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-params-writer:
        name: aws-params-writer
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-redis-node:
        name: aws-redis-node
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-s3-private-bucket:
        name: aws-s3-private-bucket
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-single-page-static-site:
        name: aws-single-page-static-site
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-ssm-params:
        name: aws-ssm-params
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    aws-ssm-params-writer:
        name: aws-ssm-params-writer
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    bless-ca:
        name: bless-ca
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    bless-ca_test:
        name: bless-ca_test
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    github-webhooks-to-s3:
        name: github-webhooks-to-s3
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    module-template:
        name: module-template
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
    testutil:
        name: testutil
        runs-on: ubuntu-latest
        timeout-minutes: 45
        steps:
          - run: env
          - uses: actions/checkout@v2
          - name: cache homebrew
            uses: actions/cache@v2
            with:
                key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile.lock.json') }}
                path: /home/linuxbrew/.linuxbrew
          - run: brew bundle install
          - run: "\n                        cat << EOF > ~/.aws/credentials\n                        [cztack-ci-1]\n                        aws_access_key_id=${{ secrets.CI1_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI1_AWS_SECRET_ACCESS_KEY }}\n\n                        [cztack-ci-2]\n                        aws_access_key_id=${{ secrets.CI2_AWS_ACCESS_KEY_ID }}\n                        aws_secret_access_key=${{ secrets.CI2_AWS_SECRET_ACCESS_KEY }}\n                        EOF\n\n                    "
